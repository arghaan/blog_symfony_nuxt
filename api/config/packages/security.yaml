security:
  providers:
    user_db_provider:
      entity:
        class: App\Entity\User
        property: username
    in_memory:
      memory:
        users:
          admin:
            password: $2y$12$LhoRWwnWimLqBjFeXOD59ObHQlALhaZh2pqkGzzTIrXeFZs/ltSju
            roles: 'ROLE_ADMIN'
  role_hierarchy:
    ROLE_ADMIN: [ROLE_USER]
    ROLE_API_ADMIN: [ROLE_API_USER]
  firewalls:
    login:
      pattern:  ^/api/login
      stateless: true
      anonymous: true
      json_login:
        provider:        user_db_provider
        check_path:      /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern:   ^/api
      stateless: true
      anonymous: true
      guard:
        provider: user_db_provider
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      security: false

  access_control:
    - { path: ^/api/login,   roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/graphql, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api,         roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/admin/,      roles: ROLE_ADMIN }
  encoders:
    App\Entity\User:
      algorithm: auto
